name: Testing, linting, and coverage
on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
  workflow_dispatch:
    branches:
      - develop

env:
  PYTHONPATH: ${GITHUB_WORKSPACE}/src

jobs:
  lint_and_coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Install Micromamba with no environment
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: false
          channel-priority: flexible
          cache-downloads: true
          cache-env: true

      - name: Install conda environment
        run: |
          echo "Working in: ${GITHUB_WORKSPACE}"
          ls ${GITHUB_WORKSPACE}
          micromamba create -y -f ${GITHUB_WORKSPACE}/environment.yaml

      - name: Analyzing code with pylint
        run: |
          eval "$(micromamba shell hook --shell=bash)"
          micromamba activate workflow_tools
          export PYTHONPATH=$(pwd):$(pwd)/src
          pylint tests scripts src/uwtools

      - name: Check the Jenkins job script
        run: |
          eval "$(micromamba shell hook --shell=bash)"
          micromamba activate workflow_tools
          export PYTHONPATH=$(pwd):$(pwd)/src
          export WORKSPACE=${GITHUB_WORKSPACE}
          .cicd/jobs/lint_and_test.sh

      - name: Run pytest-cov
        run: |
          eval "$(micromamba shell hook --shell=bash)"
          micromamba activate workflow_tools
          export PYTHONPATH=$PYTHONPATH:$(pwd)/src
          python -m pytest --cov-fail-under=90 --cov-report=html --cov=uwtools
          rm ./htmlcov/.gitignore

      - name: Upload reports
        uses: actions/upload-artifact@v3
        with:
          name: report
          path: htmlcov


  run_pytests:
    name: Run pytest tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Install Micromamba with no environment
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: false
          channel-priority: flexible
          cache-downloads: true
          cache-env: true

      - name: Install conda environment
        run: |
          echo "Working in: ${GITHUB_WORKSPACE}"
          ls ${GITHUB_WORKSPACE}
          micromamba create -y -n workflow_tools_${{ matrix.python }} -f ${GITHUB_WORKSPACE}/environment.yaml

      - name: Setup conda environment
        run: |
          eval "$(micromamba shell hook --shell=bash)"
          micromamba activate workflow_tools_${{ matrix.python }}
          micromamba install --no-pin -y -c conda-forge python=${{ matrix.python }}

      - name:
        run: |
          eval "$(micromamba shell hook --shell=bash)"
          micromamba activate workflow_tools_${{ matrix.python }}
          export PYTHONPATH=$(pwd)/src
          python -m pytest

  deploy_to_pages:
    needs: [lint_and_coverage]
    continue-on-error: true
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    permissions:
      contents: write
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Download Reports
        uses: actions/download-artifact@v3
        with:
          name: report
          path: report

      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: "./report" # The folder the action should deploy.
          target-folder: "./coverage"
